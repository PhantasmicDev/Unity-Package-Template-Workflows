name: Rename Package

on:
  workflow_call:
    inputs:
      package-name:
        type: string
        required: true
      company-name:
        type: string
        required: true
      official-name:
        type: string
        required: false
      root-namespace:
        type: string
        required: false

permissions:
  contents: write

jobs:
  rename:
    name: Rename
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3

      - name: Parse provided inputs
        id: parse-inputs
        run: |
          OFFICIAL_NAME=$(echo "${{ inputs.official-name }}" | tr '[:upper:]' '[:lower:]')

          if [ -z "$OFFICIAL_NAME" ]; then
            OFFICIAL_NAME=$(echo com."${{ inputs.company-name }}"."${{ inputs.package-name }}" | tr '[:upper:]' '[:lower:]' | sed 's/ //g')
            echo "Official package name was not provided, '$OFFICIAL_NAME' will be used instead"
          fi

          echo "official-name=$OFFICIAL_NAME" >> "$GITHUB_OUTPUT"
          echo "asmdef-base-name=$(echo "${{ inputs.company-name }}"."${{ inputs.package-name }}" | sed 's/ //g')" >> "$GITHUB_OUTPUT"

      - name: Edit package name
        uses: jossef/action-set-json-field@v2.1
        with:
          file: package.json
          field: name
          value: ${{ steps.parse-inputs.outputs.official-name }}

      - name: Edit package display name
        uses: jossef/action-set-json-field@v2.1
        with:
          file: package.json
          field: displayName
          value: ${{ inputs.package-name }}

      - name: Rename assembly definition files
        id: rename-asmdef
        run: |
          function rename_asmdef_in_directory() {
            local DIRECTORY="$1"

            if ! [ -d "$DIRECTORY" ]; then
              echo "Notice: Directory expected to contain a '.asmdef' file, '$DIRECTORY' does not exits." >&2
              return
            fi
            
            local CURRENT_PATH=$(find "$DIRECTORY" -maxdepth 1 -name "*.asmdef" -print -quit)
            if [ -z "$CURRENT_PATH" ]; then
              echo "Notice: Expected '.asmdef' files was not found in directory '$DIRECTORY'." >&2
              return
            fi

            local NEW_NAME="$2"
            local NEW_PATH=$(dirname "$CURRENT_PATH")/"$NEW_NAME".asmdef

            mv "$CURRENT_PATH" "$NEW_PATH"
            echo "Renamed '$CURRENT_PATH' to '$NEW_PATH'." >&2
            
            # Rename meta file if it exists
            if [ -e "$CURRENT_PATH".meta ]; then
              mv "$CURRENT_PATH".meta "$NEW_PATH".meta
              echo "Renamed '$CURRENT_PATH.meta' to '$NEW_PATH.meta'.meta." >&2
            else
              echo "No '.meta' file found for '$CURRENT_PATH' to rename" >&2
            fi
            
            echo $NEW_PATH
          }
          
          ASMDEF_BASE_NAME=${{ steps.parse-inputs.outputs.asmdef-base-name }}

          echo "runtime=$(rename_asmdef_in_directory "Runtime" "$ASMDEF_BASE_NAME")" >> "$GITHUB_OUTPUT"
          echo "editor=$(rename_asmdef_in_directory "Editor" "$ASMDEF_BASE_NAME".Editor)" >> "$GITHUB_OUTPUT"
          echo "runtime-tests=$(rename_asmdef_in_directory "Tests/Runtime" "$ASMDEF_BASE_NAME".Tests)" >> "$GITHUB_OUTPUT"
          echo "editor-tests=$(rename_asmdef_in_directory "Tests/Editor" "$ASMDEF_BASE_NAME".Editor.Tests)" >> "$GITHUB_OUTPUT"

      - name: Update Runtime assembly definition name
        if: ${{ steps.rename-asmdef.outputs.runtime != '' }}
        uses: jossef/action-set-json-field@v2.1
        with:
          file: ${{ steps.rename-asmdef.outputs.runtime }}
          field: name
          value: ${{ steps.parse-inputs.outputs.asmdef-base-name }}
          
      - name: Update Runtime assembly root namespace
        if: ${{ steps.rename-asmdef.outputs.runtime != '' && inputs.root-namespace != '' }}
        uses: jossef/action-set-json-field@v2.1
        with:
          file: ${{ steps.rename-asmdef.outputs.runtime }}
          field: rootNamespace
          value: ${{ inputs.root-namespace }}

      - name: Update Editor assembly definition name
        if: ${{ steps.rename-asmdef.outputs.editor != '' }}
        uses: jossef/action-set-json-field@v2.1
        with:
          file: ${{ steps.rename-asmdef.outputs.editor }}
          field: name
          value: ${{ steps.parse-inputs.outputs.asmdef-base-name }}.Editor
          
      - name: Update Editor assembly root namespace
        if: ${{ steps.rename-asmdef.outputs.editor != '' && inputs.root-namespace != '' }}
        uses: jossef/action-set-json-field@v2.1
        with:
          file: ${{ steps.rename-asmdef.outputs.editor }}
          field: rootNamespace
          value: ${{ inputs.root-namespace }}.Editor

      - name: Update Runtime Tests assembly definition name
        if: ${{ steps.rename-asmdef.outputs.runtime-tests != '' }}
        uses: jossef/action-set-json-field@v2.1
        with:
          file: ${{ steps.rename-asmdef.outputs.runtime-tests }}
          field: name
          value: ${{ steps.parse-inputs.outputs.asmdef-base-name }}.Tests
          
      - name: Update Runtime Tests assembly definition root namespace
        if: ${{ steps.rename-asmdef.outputs.runtime-tests != '' && inputs.root-namespace != '' }}
        uses: jossef/action-set-json-field@v2.1
        with:
          file: ${{ steps.rename-asmdef.outputs.runtime-tests }}
          field: rootNamespace
          value: ${{ inputs.root-namespace }}.Tests

      - name: Update Editor Tests assembly definition name
        if: ${{ steps.rename-asmdef.outputs.editor-tests != '' }}
        uses: jossef/action-set-json-field@v2.1
        with:
          file: ${{ steps.rename-asmdef.outputs.editor-tests }}
          field: name
          value: ${{ steps.parse-inputs.outputs.asmdef-base-name }}.Editor.Tests
          
      - name: Update Editor Tests assembly definition root namespace
        if: ${{ steps.rename-asmdef.outputs.editor-tests != '' && inputs.root-namespace != '' }}
        uses: jossef/action-set-json-field@v2.1
        with:
          file: ${{ steps.rename-asmdef.outputs.editor-tests }}
          field: rootNamespace
          value: ${{ inputs.root-namespace }}.Editor.Tests

      - name: Commit & Push
        uses: EndBug/add-and-commit@v9
        with:
          message: Renamed Package to ${{ inputs.package-name }}
          committer_name: GitHub Actions
          committer_email: 41898282+github-actions[bot]@users.noreply.github.com
